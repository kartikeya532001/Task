name: EKS Deploy

on:
  push:
    branches:
      - main

jobs:
  check-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Check if EKS cluster exists
        id: check_cluster
        run: |
          cluster_name="wisecow"  # Replace with your cluster name
          eksctl get cluster -n $cluster_name || echo "Cluster does not exist"
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: check-cluster
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t kartikeya532001/wisecow:latest .
          docker push kartikeya532001/wisecow:latest

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install eksctl
        run: |
          sudo curl --silent --location -o /usr/local/bin/eksctl "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64"
          sudo chmod +x /usr/local/bin/eksctl

      - name: Create EKS Cluster
        if: steps.check_cluster.outcome == 'failure'
        run: |
          eksctl create cluster -f cluster.yaml

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks --region ap-south-1 update-kubeconfig --name wisecow
        env:
          AWS_DEFAULT_REGION: ap-south-1
          AWS_REGION: ap-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create Kubernetes Secrets
        run: |
          kubectl create secret generic wisecow-tls-secret \
            --from-file=secret/certificate.crt \
            --from-file=secret/private-key.key        

      - name: Deploy Docker image to EKS
        run: |
          kubectl apply --force -f deployment.yaml
          kubectl apply --force -f service.yaml
          kubectl apply --force -f ingress.yaml

      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get services
          kubectl get ingress
